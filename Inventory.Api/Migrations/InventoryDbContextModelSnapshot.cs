// <auto-generated />
using Inventory.Core.DAL;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Inventory.Api.Migrations
{
    [DbContext(typeof(InventoryDbContext))]
    partial class InventoryDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Inventory.Core.Domain.Entities.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<decimal>("Price")
                        .HasColumnType("numeric");

                    b.Property<string>("ProductName")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("character varying(250)");

                    b.HasKey("Id");

                    b.HasIndex("ProductName")
                        .IsUnique();

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Price = 600m,
                            ProductName = "laptop"
                        },
                        new
                        {
                            Id = 2,
                            Price = 3m,
                            ProductName = "paper"
                        },
                        new
                        {
                            Id = 3,
                            Price = 35m,
                            ProductName = "keyboard"
                        });
                });

            modelBuilder.Entity("Inventory.Core.Domain.Entities.Sale", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("CustomerName")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("character varying(250)");

                    b.Property<string>("ProductName")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("character varying(250)");

                    b.Property<decimal>("ProductPrice")
                        .HasColumnType("numeric");

                    b.HasKey("Id");

                    b.ToTable("Sales");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CustomerName = "Dave",
                            ProductName = "laptop",
                            ProductPrice = 900m
                        },
                        new
                        {
                            Id = 2,
                            CustomerName = "George",
                            ProductName = "keyboard",
                            ProductPrice = 35m
                        },
                        new
                        {
                            Id = 3,
                            CustomerName = "Fiona",
                            ProductName = "paper",
                            ProductPrice = 5m
                        },
                        new
                        {
                            Id = 4,
                            CustomerName = "Rory",
                            ProductName = "paper",
                            ProductPrice = 3m
                        },
                        new
                        {
                            Id = 5,
                            CustomerName = "Olivia",
                            ProductName = "laptop",
                            ProductPrice = 600m
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
